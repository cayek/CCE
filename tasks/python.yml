- name: install python core packages
  apt:
    name: [python, python-virtualenv, python-dev, python-setuptools, python-pip, python3, python3-setuptools, python3-dev, python3-pip]
    state: present
    install_recommends: yes
    update_cache: yes
  become: yes

- name: Check if conda is installed
  stat: path=/home/{{username}}/miniconda3/
  register: miniconda_path

- name: get miniconda install script
  get_url:
    url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    dest: /tmp/miniconda.sh
  when: miniconda_path.stat.exists == false

- name: Install miniconda
  shell: bash /tmp/miniconda.sh -b -p /home/{{username}}/miniconda3
  when: miniconda_path.stat.exists == false

# see https://github.com/pyenv/pyenv/wiki/Common-build-problems#prerequisites
- name: packages for pyenv
  apt:
    name: ['make', 'build-essential', 'libssl-dev', 'zlib1g-dev', 'libbz2-dev', 'libreadline-dev', 'libsqlite3-dev', 'wget', 'curl', 'llvm', 'libncurses5-dev', 'libncursesw5-dev', 'xz-utils', 'tk-dev', 'libffi-dev', 'liblzma-dev', 'python-openssl', 'git']
    state: present
    install_recommends: yes
    update_cache: yes
  become: yes

- name: Clone pyenv
  git:
    repo: "https://github.com/pyenv/pyenv.git"
    dest: ~/.pyenv/

- name: Clone pyenv virtualenv
  git:
    repo: "https://github.com/pyenv/pyenv-virtualenv.git"
    dest: ~/.pyenv/plugins/pyenv-virtualenv/

- name: Install virtualenv and virtualenvvrapper in .pyvenv
  pip: 
    virtualenv_python: python3.6
    virtualenv: "{{pyvenv_path}}"
    virtualenv_site_packages: yes
    name: ['virtualenv', 'virtualenvwrapper']
    state: latest

- name: Create symlink for virtualenv
  file: 
    src: '{{pyvenv_path}}/bin/{{ item }}'
    dest: '{{extra_bin_path}}/{{ item }}'
    state: link
  with_items:
    - virtualenv
    - virtualenv-clone

- name: Install virtualenv and virtualenvvrapper in .pyvenv
  pip: 
    virtualenv_python: python3.6
    virtualenv: "{{pyvenv_path}}"
    virtualenv_site_packages: yes
    name: ['python-language-server[all]']
    state: latest


- name: Create symlink for pyls and other tools
  file: 
    src: '{{pyvenv_path}}/bin/{{ item }}'
    dest: '{{extra_bin_path}}/{{ item }}'
    state: link
  with_items:
    - flake8
    - pyls

- name: add bash pyenv init
  blockinfile: 
    dest: "/home/{{username}}/.bash_profile"
    create: yes
    insertafter: EOF
    block: |
      export PYENV_ROOT="$HOME/.pyenv"
      export PATH="$PYENV_ROOT/bin:/home/{{username}}/.bin:$PATH"
      # pyenv
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
      # virtualenv
      export WORKON_HOME=$HOME/.virtualenvs
      export VIRTUALENVWRAPPER_PYTHON=/home/{{username}}/.pyvenv/bin/python
      export PROJECT_HOME=$HOME/projects
      source /home/{{username}}/.pyvenv/bin/virtualenvwrapper.sh
  tags: that

- name: add zsh pyenv init
  blockinfile: 
    dest: "/home/{{username}}/.zshenv"
    create: yes
    insertafter: EOF
    block: |
      export PYENV_ROOT="$HOME/.pyenv"
      export PATH="$PYENV_ROOT/bin:/home/{{username}}/.bin:$PATH"
      # pyenv
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
      # virtualenv
      export WORKON_HOME=$HOME/.virtualenvs
      export VIRTUALENVWRAPPER_PYTHON=/home/{{username}}/.pyvenv/bin/python
      export PROJECT_HOME=$HOME/projects
      source /home/{{username}}/.pyvenv/bin/virtualenvwrapper.sh
  when: (zsh_enabled | default(False))
  tags: that

- name: spacemacs python.el 
  template:
    src: emacs/python.el
    dest: "{{spacemacs_dotdirectory}}/userconf/python.el"
